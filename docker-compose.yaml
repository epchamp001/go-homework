version: '3.8'

services:
  postgres-master:
    image: bitnami/postgresql:latest
    container_name: postgres-master
    env_file:
      - .env
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: ${PG_REPL_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${PG_REPL_PASSWORD}
      POSTGRESQL_USERNAME: ${PG_SUPER_USER}
      POSTGRESQL_PASSWORD: ${PG_SUPER_PASSWORD}
      POSTGRESQL_DATABASE: ${PG_DATABASE}
      POSTGRESQL_POSTGRES_PASSWORD: ${SUPER_POSTGRES_PASSWORD}
    ports:
      - "${PG_MASTER_PORT}:5432"
    volumes:
      - postgres-master-data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_SUPER_USER} -d ${PG_DATABASE}"]
      interval: 5s
      retries: 5
    networks:
      - pvz-network

  postgres-replica1:
    image: bitnami/postgresql:latest
    container_name: postgres-replica1
    ports:
      - "5433:5432"
    env_file:
      - .env
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: ${PG_REPL_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${PG_REPL_PASSWORD}
      POSTGRESQL_MASTER_HOST: postgres-master
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
      POSTGRESQL_PASSWORD: ${PG_SUPER_PASSWORD}
      POSTGRESQL_POSTGRES_PASSWORD: ${SUPER_POSTGRES_PASSWORD}
    depends_on:
      postgres-master:
        condition: service_healthy
    volumes:
      - postgres-replica1-data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_SUPER_USER}"]
      interval: 5s
      retries: 5
    networks:
      - pvz-network

  postgres-replica2:
    image: bitnami/postgresql:latest
    container_name: postgres-replica2
    ports:
      - "5434:5432"
    env_file:
      - .env
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: ${PG_REPL_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${PG_REPL_PASSWORD}
      POSTGRESQL_MASTER_HOST: postgres-master
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
      POSTGRESQL_PASSWORD: ${PG_SUPER_PASSWORD}
      POSTGRESQL_POSTGRES_PASSWORD: ${SUPER_POSTGRES_PASSWORD}
    depends_on:
      postgres-master:
        condition: service_healthy
    volumes:
      - postgres-replica2-data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_SUPER_USER}"]
      interval: 5s
      retries: 5
    networks:
      - pvz-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json:ro
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - pvz-network

  kafka-ui:
    container_name: pvz-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      DYNAMIC_CONFIG_ENABLED: "true"

  kafka0:
    container_name: pvz-kafka
    image: confluentinc/cp-kafka:7.7.1.arm64
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  kafka-init-topics:
    container_name: pvz-init-topics
    image: confluentinc/cp-kafka:7.7.1.arm64
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka0:29092 1 30 && \
      kafka-topics --create --topic pvz.events-log --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"

volumes:
  postgres-master-data:
  postgres-replica1-data:
  postgres-replica2-data:
  pgadmin-data:

networks:
  pvz-network:
    driver: bridge